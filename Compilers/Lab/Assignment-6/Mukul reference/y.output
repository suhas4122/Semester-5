Terminals unused in grammar

    STRUCT
    TYPEDEF
    UNION
    WHITESPACE
    COMMENT
    UNARY


State 320 conflicts: 1 reduce/reduce


Grammar

    0 $accept: translation_unit $end

    1 M: %empty

    2 N: %empty

    3 primary_expression: IDENTIFIER
    4                   | INTEGER_CONSTANT
    5                   | FLOATING_CONSTANT
    6                   | CHAR_CONST
    7                   | STRING_LITERAL
    8                   | '(' expression ')'

    9 postfix_expression: primary_expression
   10                   | postfix_expression '[' expression ']'
   11                   | postfix_expression '(' argument_expression_list_opt ')'
   12                   | postfix_expression '.' IDENTIFIER
   13                   | postfix_expression ARROW IDENTIFIER
   14                   | postfix_expression INCREMENT
   15                   | postfix_expression DECREMENT
   16                   | '(' type_name ')' '{' initializer_list '}'
   17                   | '(' type_name ')' '{' initializer_list ',' '}'

   18 argument_expression_list: assignment_expression
   19                         | argument_expression_list ',' assignment_expression

   20 argument_expression_list_opt: argument_expression_list
   21                             | %empty

   22 unary_expression: postfix_expression
   23                 | INCREMENT unary_expression
   24                 | DECREMENT unary_expression
   25                 | unary_operator cast_expression
   26                 | SIZEOF unary_expression
   27                 | SIZEOF '(' type_name ')'

   28 unary_operator: '&'
   29               | '*'
   30               | '+'
   31               | '-'
   32               | '~'
   33               | '!'

   34 cast_expression: unary_expression
   35                | '(' type_name ')' cast_expression

   36 multiplicative_expression: cast_expression
   37                          | multiplicative_expression '*' cast_expression
   38                          | multiplicative_expression '/' cast_expression
   39                          | multiplicative_expression '%' cast_expression

   40 additive_expression: multiplicative_expression
   41                    | additive_expression '+' multiplicative_expression
   42                    | additive_expression '-' multiplicative_expression

   43 shift_expression: additive_expression
   44                 | shift_expression LEFT_SHIFT additive_expression
   45                 | shift_expression RIGHT_SHIFT additive_expression

   46 relational_expression: shift_expression
   47                      | relational_expression '<' shift_expression
   48                      | relational_expression '>' shift_expression
   49                      | relational_expression LESS_THAN_EQUAL shift_expression
   50                      | relational_expression GREATER_THAN_EQUAL shift_expression

   51 equality_expression: relational_expression
   52                    | equality_expression EQUALITY relational_expression
   53                    | equality_expression NOT_EQUAL relational_expression

   54 AND_expression: equality_expression
   55               | AND_expression '&' equality_expression

   56 exclusive_OR_expression: AND_expression
   57                        | exclusive_OR_expression '^' AND_expression

   58 inclusive_OR_expression: exclusive_OR_expression
   59                        | inclusive_OR_expression '|' exclusive_OR_expression

   60 logical_AND_expression: inclusive_OR_expression
   61                       | logical_AND_expression AND M inclusive_OR_expression

   62 logical_OR_expression: logical_AND_expression
   63                      | logical_OR_expression OR M logical_AND_expression

   64 conditional_expression: logical_OR_expression
   65                       | logical_OR_expression N '?' M expression N ':' M conditional_expression

   66 assignment_operator: '='
   67                    | MULTIPLY_EQUAL
   68                    | DIVIDE_EQUAL
   69                    | MOD_EQUAL
   70                    | PLUS_EQUAL
   71                    | MINUS_EQUAL
   72                    | LEFT_SHIFT_EQUAL
   73                    | RIGHT_SHIFT_EQUAL
   74                    | AND_EQUAL
   75                    | XOR_EQUAL
   76                    | OR_EQUAL

   77 assignment_expression: conditional_expression
   78                      | unary_expression assignment_operator assignment_expression

   79 constant_expression: conditional_expression

   80 expression: assignment_expression
   81           | expression ',' assignment_expression

   82 declaration: declaration_specifiers init_declarator_list_opt ';'

   83 init_declarator_list_opt: init_declarator_list
   84                         | %empty

   85 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   86                       | type_specifier declaration_specifiers_opt
   87                       | type_qualifier declaration_specifiers_opt
   88                       | function_specifier declaration_specifiers_opt

   89 declaration_specifiers_opt: declaration_specifiers
   90                           | %empty

   91 init_declarator_list: init_declarator
   92                     | init_declarator_list ',' init_declarator

   93 init_declarator: declarator
   94                | declarator '=' initializer

   95 storage_class_specifier: EXTERN
   96                        | STATIC

   97 type_specifier: VOID
   98               | CHAR
   99               | SHORT
  100               | INT
  101               | LONG
  102               | FLOAT
  103               | DOUBLE

  104 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  105                         | type_qualifier specifier_qualifier_list_opt

  106 specifier_qualifier_list_opt: specifier_qualifier_list
  107                             | %empty

  108 type_qualifier: CONST
  109               | RESTRICT
  110               | VOLATILE

  111 function_specifier: INLINE

  112 declarator: pointer_opt direct_declarator

  113 pointer_opt: pointer
  114            | %empty

  115 direct_declarator: IDENTIFIER
  116                  | '(' declarator ')'
  117                  | direct_declarator '[' type_qualifier_list_opt assignment_expression_opt ']'
  118                  | direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression ']'
  119                  | direct_declarator '[' type_qualifier_list STATIC assignment_expression ']'
  120                  | direct_declarator '[' type_qualifier_list_opt '*' ']'
  121                  | direct_declarator '(' parameter_type_list ')'
  122                  | direct_declarator '(' identifier_list_opt ')'

  123 type_qualifier_list_opt: type_qualifier_list
  124                        | %empty

  125 assignment_expression_opt: assignment_expression
  126                          | %empty

  127 identifier_list_opt: identifier_list
  128                    | %empty

  129 pointer: '*' type_qualifier_list_opt
  130        | '*' type_qualifier_list_opt pointer

  131 type_qualifier_list: type_qualifier
  132                    | type_qualifier_list type_qualifier

  133 parameter_type_list: parameter_list
  134                    | parameter_list ',' ELLIPSIS

  135 parameter_list: parameter_declaration
  136               | parameter_list ',' parameter_declaration

  137 parameter_declaration: declaration_specifiers declarator
  138                      | declaration_specifiers

  139 identifier_list: IDENTIFIER
  140                | identifier_list ',' IDENTIFIER

  141 type_name: specifier_qualifier_list

  142 initializer: assignment_expression
  143            | '{' initializer_list '}'
  144            | '{' initializer_list ',' '}'

  145 initializer_list: designation_opt initializer
  146                 | initializer_list ',' designation_opt initializer

  147 designation_opt: designation
  148                | %empty

  149 designation: designator_list '='

  150 designator_list: designator
  151                | designator_list designator

  152 designator: '[' constant_expression ']'
  153           | '.' IDENTIFIER

  154 statement: labeled_statement
  155          | compound_statement
  156          | expression_statement
  157          | selection_statement
  158          | iteration_statement
  159          | jump_statement

  160 labeled_statement: IDENTIFIER ':' statement
  161                  | CASE constant_expression ':' statement
  162                  | DEFAULT ':' statement

  163 compound_statement: '{' block_item_list_opt '}'

  164 block_item_list_opt: block_item_list
  165                    | %empty

  166 block_item_list: block_item
  167                | block_item_list M block_item

  168 block_item: declaration
  169           | statement

  170 expression_statement: expression_opt ';'

  171 expression_opt: expression
  172               | %empty

  173 selection_statement: IF '(' expression N ')' M statement N ELSE M statement
  174                    | IF '(' expression N ')' M statement
  175                    | SWITCH '(' expression ')' statement

  176 iteration_statement: WHILE '(' M expression N ')' M statement
  177                    | DO M statement WHILE '(' M expression N ')' ';'
  178                    | FOR '(' expression_opt ';' M expression_opt N ';' M expression_opt N ')' M statement
  179                    | FOR '(' declaration expression_opt ';' expression_opt ')' statement

  180 jump_statement: GOTO IDENTIFIER ';'
  181               | CONTINUE ';'
  182               | BREAK ';'
  183               | RETURN expression_opt ';'

  184 translation_unit: external_declaration
  185                 | translation_unit external_declaration

  186 external_declaration: function_definition
  187                     | declaration

  188 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

  189 declaration_list_opt: declaration_list
  190                     | %empty

  191 declaration_list: declaration
  192                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 33
    '%' (37) 39
    '&' (38) 28 55
    '(' (40) 8 11 16 17 27 35 116 121 122 173 174 175 176 177 178 179
    ')' (41) 8 11 16 17 27 35 116 121 122 173 174 175 176 177 178 179
    '*' (42) 29 37 120 129 130
    '+' (43) 30 41
    ',' (44) 17 19 81 92 134 136 140 144 146
    '-' (45) 31 42
    '.' (46) 12 153
    '/' (47) 38
    ':' (58) 65 160 161 162
    ';' (59) 82 170 177 178 179 180 181 182 183
    '<' (60) 47
    '=' (61) 66 94 149
    '>' (62) 48
    '?' (63) 65
    '[' (91) 10 117 118 119 120 152
    ']' (93) 10 117 118 119 120 152
    '^' (94) 57
    '{' (123) 16 17 143 144 163
    '|' (124) 59
    '}' (125) 16 17 143 144 163
    '~' (126) 32
    error (256)
    BREAK (258) 182
    CASE (259) 161
    CHAR (260) 98
    CONST (261) 108
    CONTINUE (262) 181
    DEFAULT (263) 162
    DO (264) 177
    DOUBLE (265) 103
    ELSE (266) 173
    EXTERN (267) 95
    FLOAT (268) 102
    FOR (269) 178 179
    GOTO (270) 180
    IF (271) 173 174
    INLINE (272) 111
    INT (273) 100
    LONG (274) 101
    RESTRICT (275) 109
    RETURN (276) 183
    SHORT (277) 99
    SIZEOF (278) 26 27
    STATIC (279) 96 118 119
    STRUCT (280)
    SWITCH (281) 175
    TYPEDEF (282)
    UNION (283)
    VOID (284) 97
    VOLATILE (285) 110
    WHILE (286) 176 177
    ARROW (287) 13
    DECREMENT (288) 15 24
    INCREMENT (289) 14 23
    RIGHT_SHIFT (290) 45
    LEFT_SHIFT (291) 44
    GREATER_THAN_EQUAL (292) 50
    LESS_THAN_EQUAL (293) 49
    NOT_EQUAL (294) 53
    EQUALITY (295) 52
    OR (296) 63
    AND (297) 61
    ELLIPSIS (298) 134
    PLUS_EQUAL (299) 70
    MINUS_EQUAL (300) 71
    MULTIPLY_EQUAL (301) 67
    MOD_EQUAL (302) 69
    DIVIDE_EQUAL (303) 68
    AND_EQUAL (304) 74
    OR_EQUAL (305) 76
    XOR_EQUAL (306) 75
    RIGHT_SHIFT_EQUAL (307) 73
    LEFT_SHIFT_EQUAL (308) 72
    WHITESPACE (309)
    COMMENT (310)
    INTEGER_CONSTANT <_int_value> (311) 4
    FLOATING_CONSTANT <_float_value> (312) 5
    CHAR_CONST <_char_value> (313) 6
    STRING_LITERAL <_string_literal> (314) 7
    IDENTIFIER <_identifier> (315) 3 12 13 115 139 140 153 160 180
    UNARY (316)
    IF_CONFLICT (317)


Nonterminals, with rules where they appear

    $accept (87)
        on left: 0
    M <_instruction> (88)
        on left: 1
        on right: 61 63 65 167 173 174 176 177 178
    N <_nextlist> (89)
        on left: 2
        on right: 65 173 174 176 177 178
    primary_expression <_expression> (90)
        on left: 3 4 5 6 7 8
        on right: 9
    postfix_expression <_expression> (91)
        on left: 9 10 11 12 13 14 15 16 17
        on right: 10 11 12 13 14 15 22
    argument_expression_list <_paramList> (92)
        on left: 18 19
        on right: 19 20
    argument_expression_list_opt <_paramList> (93)
        on left: 20 21
        on right: 11
    unary_expression <_expression> (94)
        on left: 22 23 24 25 26 27
        on right: 23 24 26 34 78
    unary_operator <_char_value> (95)
        on left: 28 29 30 31 32 33
        on right: 25
    cast_expression <_expression> (96)
        on left: 34 35
        on right: 25 35 36 37 38 39
    multiplicative_expression <_expression> (97)
        on left: 36 37 38 39
        on right: 37 38 39 40 41 42
    additive_expression <_expression> (98)
        on left: 40 41 42
        on right: 41 42 43 44 45
    shift_expression <_expression> (99)
        on left: 43 44 45
        on right: 44 45 46 47 48 49 50
    relational_expression <_expression> (100)
        on left: 46 47 48 49 50
        on right: 47 48 49 50 51 52 53
    equality_expression <_expression> (101)
        on left: 51 52 53
        on right: 52 53 54 55
    AND_expression <_expression> (102)
        on left: 54 55
        on right: 55 56 57
    exclusive_OR_expression <_expression> (103)
        on left: 56 57
        on right: 57 58 59
    inclusive_OR_expression <_expression> (104)
        on left: 58 59
        on right: 59 60 61
    logical_AND_expression <_expression> (105)
        on left: 60 61
        on right: 61 62 63
    logical_OR_expression <_expression> (106)
        on left: 62 63
        on right: 63 64 65
    conditional_expression <_expression> (107)
        on left: 64 65
        on right: 65 77 79
    assignment_operator (108)
        on left: 66 67 68 69 70 71 72 73 74 75 76
        on right: 78
    assignment_expression <_expression> (109)
        on left: 77 78
        on right: 18 19 78 80 81 118 119 125 142
    constant_expression <_expression> (110)
        on left: 79
        on right: 152 161
    expression <_expression> (111)
        on left: 80 81
        on right: 8 10 65 81 171 173 174 175 176 177
    declaration <_expression> (112)
        on left: 82
        on right: 168 179 187 191 192
    init_declarator_list_opt <_expression> (113)
        on left: 83 84
        on right: 82
    declaration_specifiers <_declarator> (114)
        on left: 85 86 87 88
        on right: 82 89 137 138 188
    declaration_specifiers_opt (115)
        on left: 89 90
        on right: 85 86 87 88
    init_declarator_list <_expression> (116)
        on left: 91 92
        on right: 83 92
    init_declarator <_expression> (117)
        on left: 93 94
        on right: 91 92
    storage_class_specifier (118)
        on left: 95 96
        on right: 85
    type_specifier <_declarator> (119)
        on left: 97 98 99 100 101 102 103
        on right: 86 104
    specifier_qualifier_list <_declarator> (120)
        on left: 104 105
        on right: 106 141
    specifier_qualifier_list_opt (121)
        on left: 106 107
        on right: 104 105
    type_qualifier (122)
        on left: 108 109 110
        on right: 87 105 131 132
    function_specifier (123)
        on left: 111
        on right: 88
    declarator <_expression> (124)
        on left: 112
        on right: 93 94 116 137 188
    pointer_opt <_declarator> (125)
        on left: 113 114
        on right: 112
    direct_declarator <_expression> (126)
        on left: 115 116 117 118 119 120 121 122
        on right: 112 117 118 119 120 121 122
    type_qualifier_list_opt (127)
        on left: 123 124
        on right: 117 118 120 129 130
    assignment_expression_opt <_expression> (128)
        on left: 125 126
        on right: 117
    identifier_list_opt (129)
        on left: 127 128
        on right: 122
    pointer <_declarator> (130)
        on left: 129 130
        on right: 113 130
    type_qualifier_list (131)
        on left: 131 132
        on right: 119 123 132
    parameter_type_list (132)
        on left: 133 134
        on right: 121
    parameter_list (133)
        on left: 135 136
        on right: 133 134 136
    parameter_declaration (134)
        on left: 137 138
        on right: 135 136
    identifier_list (135)
        on left: 139 140
        on right: 127 140
    type_name <_declarator> (136)
        on left: 141
        on right: 16 17 27 35
    initializer <_expression> (137)
        on left: 142 143 144
        on right: 94 145 146
    initializer_list (138)
        on left: 145 146
        on right: 16 17 143 144 146
    designation_opt (139)
        on left: 147 148
        on right: 145 146
    designation (140)
        on left: 149
        on right: 147
    designator_list (141)
        on left: 150 151
        on right: 149 151
    designator (142)
        on left: 152 153
        on right: 150 151
    statement <_nextlist> (143)
        on left: 154 155 156 157 158 159
        on right: 160 161 162 169 173 174 175 176 177 178 179
    labeled_statement <_nextlist> (144)
        on left: 160 161 162
        on right: 154
    compound_statement <_nextlist> (145)
        on left: 163
        on right: 155 188
    block_item_list_opt <_nextlist> (146)
        on left: 164 165
        on right: 163
    block_item_list <_nextlist> (147)
        on left: 166 167
        on right: 164 167
    block_item <_nextlist> (148)
        on left: 168 169
        on right: 166 167
    expression_statement <_expression> (149)
        on left: 170
        on right: 156
    expression_opt <_expression> (150)
        on left: 171 172
        on right: 170 178 179 183
    selection_statement <_nextlist> (151)
        on left: 173 174 175
        on right: 157
    iteration_statement <_nextlist> (152)
        on left: 176 177 178 179
        on right: 158
    jump_statement <_nextlist> (153)
        on left: 180 181 182 183
        on right: 159
    translation_unit (154)
        on left: 184 185
        on right: 0 185
    external_declaration (155)
        on left: 186 187
        on right: 184 185
    function_definition (156)
        on left: 188
        on right: 186
    declaration_list_opt (157)
        on left: 189 190
        on right: 188
    declaration_list (158)
        on left: 191 192
        on right: 189 192


State 0

    0 $accept: • translation_unit $end

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    declaration              go to state 14
    declaration_specifiers   go to state 15
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    translation_unit         go to state 20
    external_declaration     go to state 21
    function_definition      go to state 22


State 1

   98 type_specifier: CHAR •

    $default  reduce using rule 98 (type_specifier)


State 2

  108 type_qualifier: CONST •

    $default  reduce using rule 108 (type_qualifier)


State 3

  103 type_specifier: DOUBLE •

    $default  reduce using rule 103 (type_specifier)


State 4

   95 storage_class_specifier: EXTERN •

    $default  reduce using rule 95 (storage_class_specifier)


State 5

  102 type_specifier: FLOAT •

    $default  reduce using rule 102 (type_specifier)


State 6

  111 function_specifier: INLINE •

    $default  reduce using rule 111 (function_specifier)


State 7

  100 type_specifier: INT •

    $default  reduce using rule 100 (type_specifier)


State 8

  101 type_specifier: LONG •

    $default  reduce using rule 101 (type_specifier)


State 9

  109 type_qualifier: RESTRICT •

    $default  reduce using rule 109 (type_qualifier)


State 10

   99 type_specifier: SHORT •

    $default  reduce using rule 99 (type_specifier)


State 11

   96 storage_class_specifier: STATIC •

    $default  reduce using rule 96 (storage_class_specifier)


State 12

   97 type_specifier: VOID •

    $default  reduce using rule 97 (type_specifier)


State 13

  110 type_qualifier: VOLATILE •

    $default  reduce using rule 110 (type_qualifier)


State 14

  187 external_declaration: declaration •

    $default  reduce using rule 187 (external_declaration)


State 15

   82 declaration: declaration_specifiers • init_declarator_list_opt ';'
  188 function_definition: declaration_specifiers • declarator declaration_list_opt compound_statement

    '*'  shift, and go to state 23

    ';'       reduce using rule 84 (init_declarator_list_opt)
    $default  reduce using rule 114 (pointer_opt)

    init_declarator_list_opt  go to state 24
    init_declarator_list      go to state 25
    init_declarator           go to state 26
    declarator                go to state 27
    pointer_opt               go to state 28
    pointer                   go to state 29


State 16

   85 declaration_specifiers: storage_class_specifier • declaration_specifiers_opt

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 30
    declaration_specifiers_opt  go to state 31
    storage_class_specifier     go to state 16
    type_specifier              go to state 17
    type_qualifier              go to state 18
    function_specifier          go to state 19


State 17

   86 declaration_specifiers: type_specifier • declaration_specifiers_opt

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 30
    declaration_specifiers_opt  go to state 32
    storage_class_specifier     go to state 16
    type_specifier              go to state 17
    type_qualifier              go to state 18
    function_specifier          go to state 19


State 18

   87 declaration_specifiers: type_qualifier • declaration_specifiers_opt

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 30
    declaration_specifiers_opt  go to state 33
    storage_class_specifier     go to state 16
    type_specifier              go to state 17
    type_qualifier              go to state 18
    function_specifier          go to state 19


State 19

   88 declaration_specifiers: function_specifier • declaration_specifiers_opt

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 30
    declaration_specifiers_opt  go to state 34
    storage_class_specifier     go to state 16
    type_specifier              go to state 17
    type_qualifier              go to state 18
    function_specifier          go to state 19


State 20

    0 $accept: translation_unit • $end
  185 translation_unit: translation_unit • external_declaration

    $end      shift, and go to state 35
    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    declaration              go to state 14
    declaration_specifiers   go to state 15
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    external_declaration     go to state 36
    function_definition      go to state 22


State 21

  184 translation_unit: external_declaration •

    $default  reduce using rule 184 (translation_unit)


State 22

  186 external_declaration: function_definition •

    $default  reduce using rule 186 (external_declaration)


State 23

  129 pointer: '*' • type_qualifier_list_opt
  130        | '*' • type_qualifier_list_opt pointer

    CONST     shift, and go to state 2
    RESTRICT  shift, and go to state 9
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 124 (type_qualifier_list_opt)

    type_qualifier           go to state 37
    type_qualifier_list_opt  go to state 38
    type_qualifier_list      go to state 39


State 24

   82 declaration: declaration_specifiers init_declarator_list_opt • ';'

    ';'  shift, and go to state 40


State 25

   83 init_declarator_list_opt: init_declarator_list •
   92 init_declarator_list: init_declarator_list • ',' init_declarator

    ','  shift, and go to state 41

    $default  reduce using rule 83 (init_declarator_list_opt)


State 26

   91 init_declarator_list: init_declarator •

    $default  reduce using rule 91 (init_declarator_list)


State 27

   93 init_declarator: declarator •
   94                | declarator • '=' initializer
  188 function_definition: declaration_specifiers declarator • declaration_list_opt compound_statement

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13
    '='       shift, and go to state 42

    '{'       reduce using rule 190 (declaration_list_opt)
    $default  reduce using rule 93 (init_declarator)

    declaration              go to state 43
    declaration_specifiers   go to state 44
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    declaration_list_opt     go to state 45
    declaration_list         go to state 46


State 28

  112 declarator: pointer_opt • direct_declarator

    IDENTIFIER  shift, and go to state 47
    '('         shift, and go to state 48

    direct_declarator  go to state 49


State 29

  113 pointer_opt: pointer •

    $default  reduce using rule 113 (pointer_opt)


State 30

   89 declaration_specifiers_opt: declaration_specifiers •

    $default  reduce using rule 89 (declaration_specifiers_opt)


State 31

   85 declaration_specifiers: storage_class_specifier declaration_specifiers_opt •

    $default  reduce using rule 85 (declaration_specifiers)


State 32

   86 declaration_specifiers: type_specifier declaration_specifiers_opt •

    $default  reduce using rule 86 (declaration_specifiers)


State 33

   87 declaration_specifiers: type_qualifier declaration_specifiers_opt •

    $default  reduce using rule 87 (declaration_specifiers)


State 34

   88 declaration_specifiers: function_specifier declaration_specifiers_opt •

    $default  reduce using rule 88 (declaration_specifiers)


State 35

    0 $accept: translation_unit $end •

    $default  accept


State 36

  185 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 185 (translation_unit)


State 37

  131 type_qualifier_list: type_qualifier •

    $default  reduce using rule 131 (type_qualifier_list)


State 38

  129 pointer: '*' type_qualifier_list_opt •
  130        | '*' type_qualifier_list_opt • pointer

    '*'  shift, and go to state 23

    $default  reduce using rule 129 (pointer)

    pointer  go to state 50


State 39

  123 type_qualifier_list_opt: type_qualifier_list •
  132 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 2
    RESTRICT  shift, and go to state 9
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 123 (type_qualifier_list_opt)

    type_qualifier  go to state 51


State 40

   82 declaration: declaration_specifiers init_declarator_list_opt ';' •

    $default  reduce using rule 82 (declaration)


State 41

   92 init_declarator_list: init_declarator_list ',' • init_declarator

    '*'  shift, and go to state 23

    $default  reduce using rule 114 (pointer_opt)

    init_declarator  go to state 52
    declarator       go to state 53
    pointer_opt      go to state 28
    pointer          go to state 29


State 42

   94 init_declarator: declarator '=' • initializer

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '{'                shift, and go to state 66
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 86
    initializer                go to state 87


State 43

  191 declaration_list: declaration •

    $default  reduce using rule 191 (declaration_list)


State 44

   82 declaration: declaration_specifiers • init_declarator_list_opt ';'

    '*'  shift, and go to state 23

    ';'       reduce using rule 84 (init_declarator_list_opt)
    $default  reduce using rule 114 (pointer_opt)

    init_declarator_list_opt  go to state 24
    init_declarator_list      go to state 25
    init_declarator           go to state 26
    declarator                go to state 53
    pointer_opt               go to state 28
    pointer                   go to state 29


State 45

  188 function_definition: declaration_specifiers declarator declaration_list_opt • compound_statement

    '{'  shift, and go to state 88

    compound_statement  go to state 89


State 46

  189 declaration_list_opt: declaration_list •
  192 declaration_list: declaration_list • declaration

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 189 (declaration_list_opt)

    declaration              go to state 90
    declaration_specifiers   go to state 44
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19


State 47

  115 direct_declarator: IDENTIFIER •

    $default  reduce using rule 115 (direct_declarator)


State 48

  116 direct_declarator: '(' • declarator ')'

    '*'  shift, and go to state 23

    $default  reduce using rule 114 (pointer_opt)

    declarator   go to state 91
    pointer_opt  go to state 28
    pointer      go to state 29


State 49

  112 declarator: pointer_opt direct_declarator •
  117 direct_declarator: direct_declarator • '[' type_qualifier_list_opt assignment_expression_opt ']'
  118                  | direct_declarator • '[' STATIC type_qualifier_list_opt assignment_expression ']'
  119                  | direct_declarator • '[' type_qualifier_list STATIC assignment_expression ']'
  120                  | direct_declarator • '[' type_qualifier_list_opt '*' ']'
  121                  | direct_declarator • '(' parameter_type_list ')'
  122                  | direct_declarator • '(' identifier_list_opt ')'

    '('  shift, and go to state 92
    '['  shift, and go to state 93

    $default  reduce using rule 112 (declarator)


State 50

  130 pointer: '*' type_qualifier_list_opt pointer •

    $default  reduce using rule 130 (pointer)


State 51

  132 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 132 (type_qualifier_list)


State 52

   92 init_declarator_list: init_declarator_list ',' init_declarator •

    $default  reduce using rule 92 (init_declarator_list)


State 53

   93 init_declarator: declarator •
   94                | declarator • '=' initializer

    '='  shift, and go to state 42

    $default  reduce using rule 93 (init_declarator)


State 54

   26 unary_expression: SIZEOF • unary_expression
   27                 | SIZEOF • '(' type_name ')'

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 94
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression  go to state 70
    postfix_expression  go to state 71
    unary_expression    go to state 95
    unary_operator      go to state 73


State 55

   24 unary_expression: DECREMENT • unary_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 96
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression  go to state 70
    postfix_expression  go to state 71
    unary_expression    go to state 97
    unary_operator      go to state 73


State 56

   23 unary_expression: INCREMENT • unary_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 96
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression  go to state 70
    postfix_expression  go to state 71
    unary_expression    go to state 98
    unary_operator      go to state 73


State 57

    4 primary_expression: INTEGER_CONSTANT •

    $default  reduce using rule 4 (primary_expression)


State 58

    5 primary_expression: FLOATING_CONSTANT •

    $default  reduce using rule 5 (primary_expression)


State 59

    6 primary_expression: CHAR_CONST •

    $default  reduce using rule 6 (primary_expression)


State 60

    7 primary_expression: STRING_LITERAL •

    $default  reduce using rule 7 (primary_expression)


State 61

    3 primary_expression: IDENTIFIER •

    $default  reduce using rule 3 (primary_expression)


State 62

   30 unary_operator: '+' •

    $default  reduce using rule 30 (unary_operator)


State 63

   31 unary_operator: '-' •

    $default  reduce using rule 31 (unary_operator)


State 64

   29 unary_operator: '*' •

    $default  reduce using rule 29 (unary_operator)


State 65

    8 primary_expression: '(' • expression ')'
   16 postfix_expression: '(' • type_name ')' '{' initializer_list '}'
   17                   | '(' • type_name ')' '{' initializer_list ',' '}'
   35 cast_expression: '(' • type_name ')' cast_expression

    CHAR               shift, and go to state 1
    CONST              shift, and go to state 2
    DOUBLE             shift, and go to state 3
    FLOAT              shift, and go to state 5
    INT                shift, and go to state 7
    LONG               shift, and go to state 8
    RESTRICT           shift, and go to state 9
    SHORT              shift, and go to state 10
    SIZEOF             shift, and go to state 54
    VOID               shift, and go to state 12
    VOLATILE           shift, and go to state 13
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 100
    type_specifier             go to state 101
    specifier_qualifier_list   go to state 102
    type_qualifier             go to state 103
    type_name                  go to state 104


State 66

  143 initializer: '{' • initializer_list '}'
  144            | '{' • initializer_list ',' '}'

    '['  shift, and go to state 105
    '.'  shift, and go to state 106

    $default  reduce using rule 148 (designation_opt)

    initializer_list  go to state 107
    designation_opt   go to state 108
    designation       go to state 109
    designator_list   go to state 110
    designator        go to state 111


State 67

   28 unary_operator: '&' •

    $default  reduce using rule 28 (unary_operator)


State 68

   32 unary_operator: '~' •

    $default  reduce using rule 32 (unary_operator)


State 69

   33 unary_operator: '!' •

    $default  reduce using rule 33 (unary_operator)


State 70

    9 postfix_expression: primary_expression •

    $default  reduce using rule 9 (postfix_expression)


State 71

   10 postfix_expression: postfix_expression • '[' expression ']'
   11                   | postfix_expression • '(' argument_expression_list_opt ')'
   12                   | postfix_expression • '.' IDENTIFIER
   13                   | postfix_expression • ARROW IDENTIFIER
   14                   | postfix_expression • INCREMENT
   15                   | postfix_expression • DECREMENT
   22 unary_expression: postfix_expression •

    ARROW      shift, and go to state 112
    DECREMENT  shift, and go to state 113
    INCREMENT  shift, and go to state 114
    '('        shift, and go to state 115
    '['        shift, and go to state 116
    '.'        shift, and go to state 117

    $default  reduce using rule 22 (unary_expression)


State 72

   34 cast_expression: unary_expression •
   78 assignment_expression: unary_expression • assignment_operator assignment_expression

    PLUS_EQUAL         shift, and go to state 118
    MINUS_EQUAL        shift, and go to state 119
    MULTIPLY_EQUAL     shift, and go to state 120
    MOD_EQUAL          shift, and go to state 121
    DIVIDE_EQUAL       shift, and go to state 122
    AND_EQUAL          shift, and go to state 123
    OR_EQUAL           shift, and go to state 124
    XOR_EQUAL          shift, and go to state 125
    RIGHT_SHIFT_EQUAL  shift, and go to state 126
    LEFT_SHIFT_EQUAL   shift, and go to state 127
    '='                shift, and go to state 128

    $default  reduce using rule 34 (cast_expression)

    assignment_operator  go to state 129


State 73

   25 unary_expression: unary_operator • cast_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression  go to state 70
    postfix_expression  go to state 71
    unary_expression    go to state 130
    unary_operator      go to state 73
    cast_expression     go to state 131


State 74

   36 multiplicative_expression: cast_expression •

    $default  reduce using rule 36 (multiplicative_expression)


State 75

   37 multiplicative_expression: multiplicative_expression • '*' cast_expression
   38                          | multiplicative_expression • '/' cast_expression
   39                          | multiplicative_expression • '%' cast_expression
   40 additive_expression: multiplicative_expression •

    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 40 (additive_expression)


State 76

   41 additive_expression: additive_expression • '+' multiplicative_expression
   42                    | additive_expression • '-' multiplicative_expression
   43 shift_expression: additive_expression •

    '+'  shift, and go to state 135
    '-'  shift, and go to state 136

    $default  reduce using rule 43 (shift_expression)


State 77

   44 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   45                 | shift_expression • RIGHT_SHIFT additive_expression
   46 relational_expression: shift_expression •

    RIGHT_SHIFT  shift, and go to state 137
    LEFT_SHIFT   shift, and go to state 138

    $default  reduce using rule 46 (relational_expression)


State 78

   47 relational_expression: relational_expression • '<' shift_expression
   48                      | relational_expression • '>' shift_expression
   49                      | relational_expression • LESS_THAN_EQUAL shift_expression
   50                      | relational_expression • GREATER_THAN_EQUAL shift_expression
   51 equality_expression: relational_expression •

    GREATER_THAN_EQUAL  shift, and go to state 139
    LESS_THAN_EQUAL     shift, and go to state 140
    '<'                 shift, and go to state 141
    '>'                 shift, and go to state 142

    $default  reduce using rule 51 (equality_expression)


State 79

   52 equality_expression: equality_expression • EQUALITY relational_expression
   53                    | equality_expression • NOT_EQUAL relational_expression
   54 AND_expression: equality_expression •

    NOT_EQUAL  shift, and go to state 143
    EQUALITY   shift, and go to state 144

    $default  reduce using rule 54 (AND_expression)


State 80

   55 AND_expression: AND_expression • '&' equality_expression
   56 exclusive_OR_expression: AND_expression •

    '&'  shift, and go to state 145

    $default  reduce using rule 56 (exclusive_OR_expression)


State 81

   57 exclusive_OR_expression: exclusive_OR_expression • '^' AND_expression
   58 inclusive_OR_expression: exclusive_OR_expression •

    '^'  shift, and go to state 146

    $default  reduce using rule 58 (inclusive_OR_expression)


State 82

   59 inclusive_OR_expression: inclusive_OR_expression • '|' exclusive_OR_expression
   60 logical_AND_expression: inclusive_OR_expression •

    '|'  shift, and go to state 147

    $default  reduce using rule 60 (logical_AND_expression)


State 83

   61 logical_AND_expression: logical_AND_expression • AND M inclusive_OR_expression
   62 logical_OR_expression: logical_AND_expression •

    AND  shift, and go to state 148

    $default  reduce using rule 62 (logical_OR_expression)


State 84

   63 logical_OR_expression: logical_OR_expression • OR M logical_AND_expression
   64 conditional_expression: logical_OR_expression •
   65                       | logical_OR_expression • N '?' M expression N ':' M conditional_expression

    OR  shift, and go to state 149

    '?'       reduce using rule 2 (N)
    $default  reduce using rule 64 (conditional_expression)

    N  go to state 150


State 85

   77 assignment_expression: conditional_expression •

    $default  reduce using rule 77 (assignment_expression)


State 86

  142 initializer: assignment_expression •

    $default  reduce using rule 142 (initializer)


State 87

   94 init_declarator: declarator '=' initializer •

    $default  reduce using rule 94 (init_declarator)


State 88

  163 compound_statement: '{' • block_item_list_opt '}'

    BREAK              shift, and go to state 151
    CASE               shift, and go to state 152
    CHAR               shift, and go to state 1
    CONST              shift, and go to state 2
    CONTINUE           shift, and go to state 153
    DEFAULT            shift, and go to state 154
    DO                 shift, and go to state 155
    DOUBLE             shift, and go to state 3
    EXTERN             shift, and go to state 4
    FLOAT              shift, and go to state 5
    FOR                shift, and go to state 156
    GOTO               shift, and go to state 157
    IF                 shift, and go to state 158
    INLINE             shift, and go to state 6
    INT                shift, and go to state 7
    LONG               shift, and go to state 8
    RESTRICT           shift, and go to state 9
    RETURN             shift, and go to state 159
    SHORT              shift, and go to state 10
    SIZEOF             shift, and go to state 54
    STATIC             shift, and go to state 11
    SWITCH             shift, and go to state 160
    VOID               shift, and go to state 12
    VOLATILE           shift, and go to state 13
    WHILE              shift, and go to state 161
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 162
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '{'                shift, and go to state 88
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    ';'       reduce using rule 172 (expression_opt)
    $default  reduce using rule 165 (block_item_list_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    declaration                go to state 164
    declaration_specifiers     go to state 44
    storage_class_specifier    go to state 16
    type_specifier             go to state 17
    type_qualifier             go to state 18
    function_specifier         go to state 19
    statement                  go to state 165
    labeled_statement          go to state 166
    compound_statement         go to state 167
    block_item_list_opt        go to state 168
    block_item_list            go to state 169
    block_item                 go to state 170
    expression_statement       go to state 171
    expression_opt             go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175


State 89

  188 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement •

    $default  reduce using rule 188 (function_definition)


State 90

  192 declaration_list: declaration_list declaration •

    $default  reduce using rule 192 (declaration_list)


State 91

  116 direct_declarator: '(' declarator • ')'

    ')'  shift, and go to state 176


State 92

  121 direct_declarator: direct_declarator '(' • parameter_type_list ')'
  122                  | direct_declarator '(' • identifier_list_opt ')'

    CHAR        shift, and go to state 1
    CONST       shift, and go to state 2
    DOUBLE      shift, and go to state 3
    EXTERN      shift, and go to state 4
    FLOAT       shift, and go to state 5
    INLINE      shift, and go to state 6
    INT         shift, and go to state 7
    LONG        shift, and go to state 8
    RESTRICT    shift, and go to state 9
    SHORT       shift, and go to state 10
    STATIC      shift, and go to state 11
    VOID        shift, and go to state 12
    VOLATILE    shift, and go to state 13
    IDENTIFIER  shift, and go to state 177

    $default  reduce using rule 128 (identifier_list_opt)

    declaration_specifiers   go to state 178
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    identifier_list_opt      go to state 179
    parameter_type_list      go to state 180
    parameter_list           go to state 181
    parameter_declaration    go to state 182
    identifier_list          go to state 183


State 93

  117 direct_declarator: direct_declarator '[' • type_qualifier_list_opt assignment_expression_opt ']'
  118                  | direct_declarator '[' • STATIC type_qualifier_list_opt assignment_expression ']'
  119                  | direct_declarator '[' • type_qualifier_list STATIC assignment_expression ']'
  120                  | direct_declarator '[' • type_qualifier_list_opt '*' ']'

    CONST     shift, and go to state 2
    RESTRICT  shift, and go to state 9
    STATIC    shift, and go to state 184
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 124 (type_qualifier_list_opt)

    type_qualifier           go to state 37
    type_qualifier_list_opt  go to state 185
    type_qualifier_list      go to state 186


State 94

    8 primary_expression: '(' • expression ')'
   16 postfix_expression: '(' • type_name ')' '{' initializer_list '}'
   17                   | '(' • type_name ')' '{' initializer_list ',' '}'
   27 unary_expression: SIZEOF '(' • type_name ')'

    CHAR               shift, and go to state 1
    CONST              shift, and go to state 2
    DOUBLE             shift, and go to state 3
    FLOAT              shift, and go to state 5
    INT                shift, and go to state 7
    LONG               shift, and go to state 8
    RESTRICT           shift, and go to state 9
    SHORT              shift, and go to state 10
    SIZEOF             shift, and go to state 54
    VOID               shift, and go to state 12
    VOLATILE           shift, and go to state 13
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 100
    type_specifier             go to state 101
    specifier_qualifier_list   go to state 102
    type_qualifier             go to state 103
    type_name                  go to state 187


State 95

   26 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 26 (unary_expression)


State 96

    8 primary_expression: '(' • expression ')'
   16 postfix_expression: '(' • type_name ')' '{' initializer_list '}'
   17                   | '(' • type_name ')' '{' initializer_list ',' '}'

    CHAR               shift, and go to state 1
    CONST              shift, and go to state 2
    DOUBLE             shift, and go to state 3
    FLOAT              shift, and go to state 5
    INT                shift, and go to state 7
    LONG               shift, and go to state 8
    RESTRICT           shift, and go to state 9
    SHORT              shift, and go to state 10
    SIZEOF             shift, and go to state 54
    VOID               shift, and go to state 12
    VOLATILE           shift, and go to state 13
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 100
    type_specifier             go to state 101
    specifier_qualifier_list   go to state 102
    type_qualifier             go to state 103
    type_name                  go to state 188


State 97

   24 unary_expression: DECREMENT unary_expression •

    $default  reduce using rule 24 (unary_expression)


State 98

   23 unary_expression: INCREMENT unary_expression •

    $default  reduce using rule 23 (unary_expression)


State 99

   80 expression: assignment_expression •

    $default  reduce using rule 80 (expression)


State 100

    8 primary_expression: '(' expression • ')'
   81 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 189
    ','  shift, and go to state 190


State 101

  104 specifier_qualifier_list: type_specifier • specifier_qualifier_list_opt

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    FLOAT     shift, and go to state 5
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 107 (specifier_qualifier_list_opt)

    type_specifier                go to state 101
    specifier_qualifier_list      go to state 191
    specifier_qualifier_list_opt  go to state 192
    type_qualifier                go to state 103


State 102

  141 type_name: specifier_qualifier_list •

    $default  reduce using rule 141 (type_name)


State 103

  105 specifier_qualifier_list: type_qualifier • specifier_qualifier_list_opt

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    FLOAT     shift, and go to state 5
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 107 (specifier_qualifier_list_opt)

    type_specifier                go to state 101
    specifier_qualifier_list      go to state 191
    specifier_qualifier_list_opt  go to state 193
    type_qualifier                go to state 103


State 104

   16 postfix_expression: '(' type_name • ')' '{' initializer_list '}'
   17                   | '(' type_name • ')' '{' initializer_list ',' '}'
   35 cast_expression: '(' type_name • ')' cast_expression

    ')'  shift, and go to state 194


State 105

  152 designator: '[' • constant_expression ']'

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 195
    constant_expression        go to state 196


State 106

  153 designator: '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 197


State 107

  143 initializer: '{' initializer_list • '}'
  144            | '{' initializer_list • ',' '}'
  146 initializer_list: initializer_list • ',' designation_opt initializer

    '}'  shift, and go to state 198
    ','  shift, and go to state 199


State 108

  145 initializer_list: designation_opt • initializer

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '{'                shift, and go to state 66
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 86
    initializer                go to state 200


State 109

  147 designation_opt: designation •

    $default  reduce using rule 147 (designation_opt)


State 110

  149 designation: designator_list • '='
  151 designator_list: designator_list • designator

    '['  shift, and go to state 105
    '.'  shift, and go to state 106
    '='  shift, and go to state 201

    designator  go to state 202


State 111

  150 designator_list: designator •

    $default  reduce using rule 150 (designator_list)


State 112

   13 postfix_expression: postfix_expression ARROW • IDENTIFIER

    IDENTIFIER  shift, and go to state 203


State 113

   15 postfix_expression: postfix_expression DECREMENT •

    $default  reduce using rule 15 (postfix_expression)


State 114

   14 postfix_expression: postfix_expression INCREMENT •

    $default  reduce using rule 14 (postfix_expression)


State 115

   11 postfix_expression: postfix_expression '(' • argument_expression_list_opt ')'

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 21 (argument_expression_list_opt)

    primary_expression            go to state 70
    postfix_expression            go to state 71
    argument_expression_list      go to state 204
    argument_expression_list_opt  go to state 205
    unary_expression              go to state 72
    unary_operator                go to state 73
    cast_expression               go to state 74
    multiplicative_expression     go to state 75
    additive_expression           go to state 76
    shift_expression              go to state 77
    relational_expression         go to state 78
    equality_expression           go to state 79
    AND_expression                go to state 80
    exclusive_OR_expression       go to state 81
    inclusive_OR_expression       go to state 82
    logical_AND_expression        go to state 83
    logical_OR_expression         go to state 84
    conditional_expression        go to state 85
    assignment_expression         go to state 206


State 116

   10 postfix_expression: postfix_expression '[' • expression ']'

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 207


State 117

   12 postfix_expression: postfix_expression '.' • IDENTIFIER

    IDENTIFIER  shift, and go to state 208


State 118

   70 assignment_operator: PLUS_EQUAL •

    $default  reduce using rule 70 (assignment_operator)


State 119

   71 assignment_operator: MINUS_EQUAL •

    $default  reduce using rule 71 (assignment_operator)


State 120

   67 assignment_operator: MULTIPLY_EQUAL •

    $default  reduce using rule 67 (assignment_operator)


State 121

   69 assignment_operator: MOD_EQUAL •

    $default  reduce using rule 69 (assignment_operator)


State 122

   68 assignment_operator: DIVIDE_EQUAL •

    $default  reduce using rule 68 (assignment_operator)


State 123

   74 assignment_operator: AND_EQUAL •

    $default  reduce using rule 74 (assignment_operator)


State 124

   76 assignment_operator: OR_EQUAL •

    $default  reduce using rule 76 (assignment_operator)


State 125

   75 assignment_operator: XOR_EQUAL •

    $default  reduce using rule 75 (assignment_operator)


State 126

   73 assignment_operator: RIGHT_SHIFT_EQUAL •

    $default  reduce using rule 73 (assignment_operator)


State 127

   72 assignment_operator: LEFT_SHIFT_EQUAL •

    $default  reduce using rule 72 (assignment_operator)


State 128

   66 assignment_operator: '=' •

    $default  reduce using rule 66 (assignment_operator)


State 129

   78 assignment_expression: unary_expression assignment_operator • assignment_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 209


State 130

   34 cast_expression: unary_expression •

    $default  reduce using rule 34 (cast_expression)


State 131

   25 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 25 (unary_expression)


State 132

   37 multiplicative_expression: multiplicative_expression '*' • cast_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression  go to state 70
    postfix_expression  go to state 71
    unary_expression    go to state 130
    unary_operator      go to state 73
    cast_expression     go to state 210


State 133

   38 multiplicative_expression: multiplicative_expression '/' • cast_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression  go to state 70
    postfix_expression  go to state 71
    unary_expression    go to state 130
    unary_operator      go to state 73
    cast_expression     go to state 211


State 134

   39 multiplicative_expression: multiplicative_expression '%' • cast_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression  go to state 70
    postfix_expression  go to state 71
    unary_expression    go to state 130
    unary_operator      go to state 73
    cast_expression     go to state 212


State 135

   41 additive_expression: additive_expression '+' • multiplicative_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 213


State 136

   42 additive_expression: additive_expression '-' • multiplicative_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 214


State 137

   45 shift_expression: shift_expression RIGHT_SHIFT • additive_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 215


State 138

   44 shift_expression: shift_expression LEFT_SHIFT • additive_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 216


State 139

   50 relational_expression: relational_expression GREATER_THAN_EQUAL • shift_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 217


State 140

   49 relational_expression: relational_expression LESS_THAN_EQUAL • shift_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 218


State 141

   47 relational_expression: relational_expression '<' • shift_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 219


State 142

   48 relational_expression: relational_expression '>' • shift_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 220


State 143

   53 equality_expression: equality_expression NOT_EQUAL • relational_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 221


State 144

   52 equality_expression: equality_expression EQUALITY • relational_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 222


State 145

   55 AND_expression: AND_expression '&' • equality_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 223


State 146

   57 exclusive_OR_expression: exclusive_OR_expression '^' • AND_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 224


State 147

   59 inclusive_OR_expression: inclusive_OR_expression '|' • exclusive_OR_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 225


State 148

   61 logical_AND_expression: logical_AND_expression AND • M inclusive_OR_expression

    $default  reduce using rule 1 (M)

    M  go to state 226


State 149

   63 logical_OR_expression: logical_OR_expression OR • M logical_AND_expression

    $default  reduce using rule 1 (M)

    M  go to state 227


State 150

   65 conditional_expression: logical_OR_expression N • '?' M expression N ':' M conditional_expression

    '?'  shift, and go to state 228


State 151

  182 jump_statement: BREAK • ';'

    ';'  shift, and go to state 229


State 152

  161 labeled_statement: CASE • constant_expression ':' statement

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 195
    constant_expression        go to state 230


State 153

  181 jump_statement: CONTINUE • ';'

    ';'  shift, and go to state 231


State 154

  162 labeled_statement: DEFAULT • ':' statement

    ':'  shift, and go to state 232


State 155

  177 iteration_statement: DO • M statement WHILE '(' M expression N ')' ';'

    $default  reduce using rule 1 (M)

    M  go to state 233


State 156

  178 iteration_statement: FOR • '(' expression_opt ';' M expression_opt N ';' M expression_opt N ')' M statement
  179                    | FOR • '(' declaration expression_opt ';' expression_opt ')' statement

    '('  shift, and go to state 234


State 157

  180 jump_statement: GOTO • IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 235


State 158

  173 selection_statement: IF • '(' expression N ')' M statement N ELSE M statement
  174                    | IF • '(' expression N ')' M statement

    '('  shift, and go to state 236


State 159

  183 jump_statement: RETURN • expression_opt ';'

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    expression_opt             go to state 237


State 160

  175 selection_statement: SWITCH • '(' expression ')' statement

    '('  shift, and go to state 238


State 161

  176 iteration_statement: WHILE • '(' M expression N ')' M statement

    '('  shift, and go to state 239


State 162

    3 primary_expression: IDENTIFIER •
  160 labeled_statement: IDENTIFIER • ':' statement

    ':'  shift, and go to state 240

    $default  reduce using rule 3 (primary_expression)


State 163

   81 expression: expression • ',' assignment_expression
  171 expression_opt: expression •

    ','  shift, and go to state 190

    $default  reduce using rule 171 (expression_opt)


State 164

  168 block_item: declaration •

    $default  reduce using rule 168 (block_item)


State 165

  169 block_item: statement •

    $default  reduce using rule 169 (block_item)


State 166

  154 statement: labeled_statement •

    $default  reduce using rule 154 (statement)


State 167

  155 statement: compound_statement •

    $default  reduce using rule 155 (statement)


State 168

  163 compound_statement: '{' block_item_list_opt • '}'

    '}'  shift, and go to state 241


State 169

  164 block_item_list_opt: block_item_list •
  167 block_item_list: block_item_list • M block_item

    '}'       reduce using rule 164 (block_item_list_opt)
    $default  reduce using rule 1 (M)

    M  go to state 242


State 170

  166 block_item_list: block_item •

    $default  reduce using rule 166 (block_item_list)


State 171

  156 statement: expression_statement •

    $default  reduce using rule 156 (statement)


State 172

  170 expression_statement: expression_opt • ';'

    ';'  shift, and go to state 243


State 173

  157 statement: selection_statement •

    $default  reduce using rule 157 (statement)


State 174

  158 statement: iteration_statement •

    $default  reduce using rule 158 (statement)


State 175

  159 statement: jump_statement •

    $default  reduce using rule 159 (statement)


State 176

  116 direct_declarator: '(' declarator ')' •

    $default  reduce using rule 116 (direct_declarator)


State 177

  139 identifier_list: IDENTIFIER •

    $default  reduce using rule 139 (identifier_list)


State 178

  137 parameter_declaration: declaration_specifiers • declarator
  138                      | declaration_specifiers •

    '*'  shift, and go to state 23

    ')'       reduce using rule 138 (parameter_declaration)
    ','       reduce using rule 138 (parameter_declaration)
    $default  reduce using rule 114 (pointer_opt)

    declarator   go to state 244
    pointer_opt  go to state 28
    pointer      go to state 29


State 179

  122 direct_declarator: direct_declarator '(' identifier_list_opt • ')'

    ')'  shift, and go to state 245


State 180

  121 direct_declarator: direct_declarator '(' parameter_type_list • ')'

    ')'  shift, and go to state 246


State 181

  133 parameter_type_list: parameter_list •
  134                    | parameter_list • ',' ELLIPSIS
  136 parameter_list: parameter_list • ',' parameter_declaration

    ','  shift, and go to state 247

    $default  reduce using rule 133 (parameter_type_list)


State 182

  135 parameter_list: parameter_declaration •

    $default  reduce using rule 135 (parameter_list)


State 183

  127 identifier_list_opt: identifier_list •
  140 identifier_list: identifier_list • ',' IDENTIFIER

    ','  shift, and go to state 248

    $default  reduce using rule 127 (identifier_list_opt)


State 184

  118 direct_declarator: direct_declarator '[' STATIC • type_qualifier_list_opt assignment_expression ']'

    CONST     shift, and go to state 2
    RESTRICT  shift, and go to state 9
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 124 (type_qualifier_list_opt)

    type_qualifier           go to state 37
    type_qualifier_list_opt  go to state 249
    type_qualifier_list      go to state 39


State 185

  117 direct_declarator: direct_declarator '[' type_qualifier_list_opt • assignment_expression_opt ']'
  120                  | direct_declarator '[' type_qualifier_list_opt • '*' ']'

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 250
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 126 (assignment_expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 251
    assignment_expression_opt  go to state 252


State 186

  119 direct_declarator: direct_declarator '[' type_qualifier_list • STATIC assignment_expression ']'
  123 type_qualifier_list_opt: type_qualifier_list •
  132 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 2
    RESTRICT  shift, and go to state 9
    STATIC    shift, and go to state 253
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 123 (type_qualifier_list_opt)

    type_qualifier  go to state 51


State 187

   16 postfix_expression: '(' type_name • ')' '{' initializer_list '}'
   17                   | '(' type_name • ')' '{' initializer_list ',' '}'
   27 unary_expression: SIZEOF '(' type_name • ')'

    ')'  shift, and go to state 254


State 188

   16 postfix_expression: '(' type_name • ')' '{' initializer_list '}'
   17                   | '(' type_name • ')' '{' initializer_list ',' '}'

    ')'  shift, and go to state 255


State 189

    8 primary_expression: '(' expression ')' •

    $default  reduce using rule 8 (primary_expression)


State 190

   81 expression: expression ',' • assignment_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 256


State 191

  106 specifier_qualifier_list_opt: specifier_qualifier_list •

    $default  reduce using rule 106 (specifier_qualifier_list_opt)


State 192

  104 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt •

    $default  reduce using rule 104 (specifier_qualifier_list)


State 193

  105 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt •

    $default  reduce using rule 105 (specifier_qualifier_list)


State 194

   16 postfix_expression: '(' type_name ')' • '{' initializer_list '}'
   17                   | '(' type_name ')' • '{' initializer_list ',' '}'
   35 cast_expression: '(' type_name ')' • cast_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '{'                shift, and go to state 257
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression  go to state 70
    postfix_expression  go to state 71
    unary_expression    go to state 130
    unary_operator      go to state 73
    cast_expression     go to state 258


State 195

   79 constant_expression: conditional_expression •

    $default  reduce using rule 79 (constant_expression)


State 196

  152 designator: '[' constant_expression • ']'

    ']'  shift, and go to state 259


State 197

  153 designator: '.' IDENTIFIER •

    $default  reduce using rule 153 (designator)


State 198

  143 initializer: '{' initializer_list '}' •

    $default  reduce using rule 143 (initializer)


State 199

  144 initializer: '{' initializer_list ',' • '}'
  146 initializer_list: initializer_list ',' • designation_opt initializer

    '['  shift, and go to state 105
    '.'  shift, and go to state 106
    '}'  shift, and go to state 260

    $default  reduce using rule 148 (designation_opt)

    designation_opt  go to state 261
    designation      go to state 109
    designator_list  go to state 110
    designator       go to state 111


State 200

  145 initializer_list: designation_opt initializer •

    $default  reduce using rule 145 (initializer_list)


State 201

  149 designation: designator_list '=' •

    $default  reduce using rule 149 (designation)


State 202

  151 designator_list: designator_list designator •

    $default  reduce using rule 151 (designator_list)


State 203

   13 postfix_expression: postfix_expression ARROW IDENTIFIER •

    $default  reduce using rule 13 (postfix_expression)


State 204

   19 argument_expression_list: argument_expression_list • ',' assignment_expression
   20 argument_expression_list_opt: argument_expression_list •

    ','  shift, and go to state 262

    $default  reduce using rule 20 (argument_expression_list_opt)


State 205

   11 postfix_expression: postfix_expression '(' argument_expression_list_opt • ')'

    ')'  shift, and go to state 263


State 206

   18 argument_expression_list: assignment_expression •

    $default  reduce using rule 18 (argument_expression_list)


State 207

   10 postfix_expression: postfix_expression '[' expression • ']'
   81 expression: expression • ',' assignment_expression

    ']'  shift, and go to state 264
    ','  shift, and go to state 190


State 208

   12 postfix_expression: postfix_expression '.' IDENTIFIER •

    $default  reduce using rule 12 (postfix_expression)


State 209

   78 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 78 (assignment_expression)


State 210

   37 multiplicative_expression: multiplicative_expression '*' cast_expression •

    $default  reduce using rule 37 (multiplicative_expression)


State 211

   38 multiplicative_expression: multiplicative_expression '/' cast_expression •

    $default  reduce using rule 38 (multiplicative_expression)


State 212

   39 multiplicative_expression: multiplicative_expression '%' cast_expression •

    $default  reduce using rule 39 (multiplicative_expression)


State 213

   37 multiplicative_expression: multiplicative_expression • '*' cast_expression
   38                          | multiplicative_expression • '/' cast_expression
   39                          | multiplicative_expression • '%' cast_expression
   41 additive_expression: additive_expression '+' multiplicative_expression •

    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 41 (additive_expression)


State 214

   37 multiplicative_expression: multiplicative_expression • '*' cast_expression
   38                          | multiplicative_expression • '/' cast_expression
   39                          | multiplicative_expression • '%' cast_expression
   42 additive_expression: additive_expression '-' multiplicative_expression •

    '*'  shift, and go to state 132
    '/'  shift, and go to state 133
    '%'  shift, and go to state 134

    $default  reduce using rule 42 (additive_expression)


State 215

   41 additive_expression: additive_expression • '+' multiplicative_expression
   42                    | additive_expression • '-' multiplicative_expression
   45 shift_expression: shift_expression RIGHT_SHIFT additive_expression •

    '+'  shift, and go to state 135
    '-'  shift, and go to state 136

    $default  reduce using rule 45 (shift_expression)


State 216

   41 additive_expression: additive_expression • '+' multiplicative_expression
   42                    | additive_expression • '-' multiplicative_expression
   44 shift_expression: shift_expression LEFT_SHIFT additive_expression •

    '+'  shift, and go to state 135
    '-'  shift, and go to state 136

    $default  reduce using rule 44 (shift_expression)


State 217

   44 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   45                 | shift_expression • RIGHT_SHIFT additive_expression
   50 relational_expression: relational_expression GREATER_THAN_EQUAL shift_expression •

    RIGHT_SHIFT  shift, and go to state 137
    LEFT_SHIFT   shift, and go to state 138

    $default  reduce using rule 50 (relational_expression)


State 218

   44 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   45                 | shift_expression • RIGHT_SHIFT additive_expression
   49 relational_expression: relational_expression LESS_THAN_EQUAL shift_expression •

    RIGHT_SHIFT  shift, and go to state 137
    LEFT_SHIFT   shift, and go to state 138

    $default  reduce using rule 49 (relational_expression)


State 219

   44 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   45                 | shift_expression • RIGHT_SHIFT additive_expression
   47 relational_expression: relational_expression '<' shift_expression •

    RIGHT_SHIFT  shift, and go to state 137
    LEFT_SHIFT   shift, and go to state 138

    $default  reduce using rule 47 (relational_expression)


State 220

   44 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   45                 | shift_expression • RIGHT_SHIFT additive_expression
   48 relational_expression: relational_expression '>' shift_expression •

    RIGHT_SHIFT  shift, and go to state 137
    LEFT_SHIFT   shift, and go to state 138

    $default  reduce using rule 48 (relational_expression)


State 221

   47 relational_expression: relational_expression • '<' shift_expression
   48                      | relational_expression • '>' shift_expression
   49                      | relational_expression • LESS_THAN_EQUAL shift_expression
   50                      | relational_expression • GREATER_THAN_EQUAL shift_expression
   53 equality_expression: equality_expression NOT_EQUAL relational_expression •

    GREATER_THAN_EQUAL  shift, and go to state 139
    LESS_THAN_EQUAL     shift, and go to state 140
    '<'                 shift, and go to state 141
    '>'                 shift, and go to state 142

    $default  reduce using rule 53 (equality_expression)


State 222

   47 relational_expression: relational_expression • '<' shift_expression
   48                      | relational_expression • '>' shift_expression
   49                      | relational_expression • LESS_THAN_EQUAL shift_expression
   50                      | relational_expression • GREATER_THAN_EQUAL shift_expression
   52 equality_expression: equality_expression EQUALITY relational_expression •

    GREATER_THAN_EQUAL  shift, and go to state 139
    LESS_THAN_EQUAL     shift, and go to state 140
    '<'                 shift, and go to state 141
    '>'                 shift, and go to state 142

    $default  reduce using rule 52 (equality_expression)


State 223

   52 equality_expression: equality_expression • EQUALITY relational_expression
   53                    | equality_expression • NOT_EQUAL relational_expression
   55 AND_expression: AND_expression '&' equality_expression •

    NOT_EQUAL  shift, and go to state 143
    EQUALITY   shift, and go to state 144

    $default  reduce using rule 55 (AND_expression)


State 224

   55 AND_expression: AND_expression • '&' equality_expression
   57 exclusive_OR_expression: exclusive_OR_expression '^' AND_expression •

    '&'  shift, and go to state 145

    $default  reduce using rule 57 (exclusive_OR_expression)


State 225

   57 exclusive_OR_expression: exclusive_OR_expression • '^' AND_expression
   59 inclusive_OR_expression: inclusive_OR_expression '|' exclusive_OR_expression •

    '^'  shift, and go to state 146

    $default  reduce using rule 59 (inclusive_OR_expression)


State 226

   61 logical_AND_expression: logical_AND_expression AND M • inclusive_OR_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 265


State 227

   63 logical_OR_expression: logical_OR_expression OR M • logical_AND_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 266


State 228

   65 conditional_expression: logical_OR_expression N '?' • M expression N ':' M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 267


State 229

  182 jump_statement: BREAK ';' •

    $default  reduce using rule 182 (jump_statement)


State 230

  161 labeled_statement: CASE constant_expression • ':' statement

    ':'  shift, and go to state 268


State 231

  181 jump_statement: CONTINUE ';' •

    $default  reduce using rule 181 (jump_statement)


State 232

  162 labeled_statement: DEFAULT ':' • statement

    BREAK              shift, and go to state 151
    CASE               shift, and go to state 152
    CONTINUE           shift, and go to state 153
    DEFAULT            shift, and go to state 154
    DO                 shift, and go to state 155
    FOR                shift, and go to state 156
    GOTO               shift, and go to state 157
    IF                 shift, and go to state 158
    RETURN             shift, and go to state 159
    SIZEOF             shift, and go to state 54
    SWITCH             shift, and go to state 160
    WHILE              shift, and go to state 161
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 162
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '{'                shift, and go to state 88
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    statement                  go to state 269
    labeled_statement          go to state 166
    compound_statement         go to state 167
    expression_statement       go to state 171
    expression_opt             go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175


State 233

  177 iteration_statement: DO M • statement WHILE '(' M expression N ')' ';'

    BREAK              shift, and go to state 151
    CASE               shift, and go to state 152
    CONTINUE           shift, and go to state 153
    DEFAULT            shift, and go to state 154
    DO                 shift, and go to state 155
    FOR                shift, and go to state 156
    GOTO               shift, and go to state 157
    IF                 shift, and go to state 158
    RETURN             shift, and go to state 159
    SIZEOF             shift, and go to state 54
    SWITCH             shift, and go to state 160
    WHILE              shift, and go to state 161
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 162
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '{'                shift, and go to state 88
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    statement                  go to state 270
    labeled_statement          go to state 166
    compound_statement         go to state 167
    expression_statement       go to state 171
    expression_opt             go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175


State 234

  178 iteration_statement: FOR '(' • expression_opt ';' M expression_opt N ';' M expression_opt N ')' M statement
  179                    | FOR '(' • declaration expression_opt ';' expression_opt ')' statement

    CHAR               shift, and go to state 1
    CONST              shift, and go to state 2
    DOUBLE             shift, and go to state 3
    EXTERN             shift, and go to state 4
    FLOAT              shift, and go to state 5
    INLINE             shift, and go to state 6
    INT                shift, and go to state 7
    LONG               shift, and go to state 8
    RESTRICT           shift, and go to state 9
    SHORT              shift, and go to state 10
    SIZEOF             shift, and go to state 54
    STATIC             shift, and go to state 11
    VOID               shift, and go to state 12
    VOLATILE           shift, and go to state 13
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    declaration                go to state 271
    declaration_specifiers     go to state 44
    storage_class_specifier    go to state 16
    type_specifier             go to state 17
    type_qualifier             go to state 18
    function_specifier         go to state 19
    expression_opt             go to state 272


State 235

  180 jump_statement: GOTO IDENTIFIER • ';'

    ';'  shift, and go to state 273


State 236

  173 selection_statement: IF '(' • expression N ')' M statement N ELSE M statement
  174                    | IF '(' • expression N ')' M statement

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 274


State 237

  183 jump_statement: RETURN expression_opt • ';'

    ';'  shift, and go to state 275


State 238

  175 selection_statement: SWITCH '(' • expression ')' statement

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 276


State 239

  176 iteration_statement: WHILE '(' • M expression N ')' M statement

    $default  reduce using rule 1 (M)

    M  go to state 277


State 240

  160 labeled_statement: IDENTIFIER ':' • statement

    BREAK              shift, and go to state 151
    CASE               shift, and go to state 152
    CONTINUE           shift, and go to state 153
    DEFAULT            shift, and go to state 154
    DO                 shift, and go to state 155
    FOR                shift, and go to state 156
    GOTO               shift, and go to state 157
    IF                 shift, and go to state 158
    RETURN             shift, and go to state 159
    SIZEOF             shift, and go to state 54
    SWITCH             shift, and go to state 160
    WHILE              shift, and go to state 161
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 162
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '{'                shift, and go to state 88
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    statement                  go to state 278
    labeled_statement          go to state 166
    compound_statement         go to state 167
    expression_statement       go to state 171
    expression_opt             go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175


State 241

  163 compound_statement: '{' block_item_list_opt '}' •

    $default  reduce using rule 163 (compound_statement)


State 242

  167 block_item_list: block_item_list M • block_item

    BREAK              shift, and go to state 151
    CASE               shift, and go to state 152
    CHAR               shift, and go to state 1
    CONST              shift, and go to state 2
    CONTINUE           shift, and go to state 153
    DEFAULT            shift, and go to state 154
    DO                 shift, and go to state 155
    DOUBLE             shift, and go to state 3
    EXTERN             shift, and go to state 4
    FLOAT              shift, and go to state 5
    FOR                shift, and go to state 156
    GOTO               shift, and go to state 157
    IF                 shift, and go to state 158
    INLINE             shift, and go to state 6
    INT                shift, and go to state 7
    LONG               shift, and go to state 8
    RESTRICT           shift, and go to state 9
    RETURN             shift, and go to state 159
    SHORT              shift, and go to state 10
    SIZEOF             shift, and go to state 54
    STATIC             shift, and go to state 11
    SWITCH             shift, and go to state 160
    VOID               shift, and go to state 12
    VOLATILE           shift, and go to state 13
    WHILE              shift, and go to state 161
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 162
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '{'                shift, and go to state 88
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    declaration                go to state 164
    declaration_specifiers     go to state 44
    storage_class_specifier    go to state 16
    type_specifier             go to state 17
    type_qualifier             go to state 18
    function_specifier         go to state 19
    statement                  go to state 165
    labeled_statement          go to state 166
    compound_statement         go to state 167
    block_item                 go to state 279
    expression_statement       go to state 171
    expression_opt             go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175


State 243

  170 expression_statement: expression_opt ';' •

    $default  reduce using rule 170 (expression_statement)


State 244

  137 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 137 (parameter_declaration)


State 245

  122 direct_declarator: direct_declarator '(' identifier_list_opt ')' •

    $default  reduce using rule 122 (direct_declarator)


State 246

  121 direct_declarator: direct_declarator '(' parameter_type_list ')' •

    $default  reduce using rule 121 (direct_declarator)


State 247

  134 parameter_type_list: parameter_list ',' • ELLIPSIS
  136 parameter_list: parameter_list ',' • parameter_declaration

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13
    ELLIPSIS  shift, and go to state 280

    declaration_specifiers   go to state 178
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    parameter_declaration    go to state 281


State 248

  140 identifier_list: identifier_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 282


State 249

  118 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt • assignment_expression ']'

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 283


State 250

   29 unary_operator: '*' •
  120 direct_declarator: direct_declarator '[' type_qualifier_list_opt '*' • ']'

    ']'  shift, and go to state 284

    $default  reduce using rule 29 (unary_operator)


State 251

  125 assignment_expression_opt: assignment_expression •

    $default  reduce using rule 125 (assignment_expression_opt)


State 252

  117 direct_declarator: direct_declarator '[' type_qualifier_list_opt assignment_expression_opt • ']'

    ']'  shift, and go to state 285


State 253

  119 direct_declarator: direct_declarator '[' type_qualifier_list STATIC • assignment_expression ']'

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 286


State 254

   16 postfix_expression: '(' type_name ')' • '{' initializer_list '}'
   17                   | '(' type_name ')' • '{' initializer_list ',' '}'
   27 unary_expression: SIZEOF '(' type_name ')' •

    '{'  shift, and go to state 257

    $default  reduce using rule 27 (unary_expression)


State 255

   16 postfix_expression: '(' type_name ')' • '{' initializer_list '}'
   17                   | '(' type_name ')' • '{' initializer_list ',' '}'

    '{'  shift, and go to state 257


State 256

   81 expression: expression ',' assignment_expression •

    $default  reduce using rule 81 (expression)


State 257

   16 postfix_expression: '(' type_name ')' '{' • initializer_list '}'
   17                   | '(' type_name ')' '{' • initializer_list ',' '}'

    '['  shift, and go to state 105
    '.'  shift, and go to state 106

    $default  reduce using rule 148 (designation_opt)

    initializer_list  go to state 287
    designation_opt   go to state 108
    designation       go to state 109
    designator_list   go to state 110
    designator        go to state 111


State 258

   35 cast_expression: '(' type_name ')' cast_expression •

    $default  reduce using rule 35 (cast_expression)


State 259

  152 designator: '[' constant_expression ']' •

    $default  reduce using rule 152 (designator)


State 260

  144 initializer: '{' initializer_list ',' '}' •

    $default  reduce using rule 144 (initializer)


State 261

  146 initializer_list: initializer_list ',' designation_opt • initializer

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '{'                shift, and go to state 66
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 86
    initializer                go to state 288


State 262

   19 argument_expression_list: argument_expression_list ',' • assignment_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 289


State 263

   11 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' •

    $default  reduce using rule 11 (postfix_expression)


State 264

   10 postfix_expression: postfix_expression '[' expression ']' •

    $default  reduce using rule 10 (postfix_expression)


State 265

   59 inclusive_OR_expression: inclusive_OR_expression • '|' exclusive_OR_expression
   61 logical_AND_expression: logical_AND_expression AND M inclusive_OR_expression •

    '|'  shift, and go to state 147

    $default  reduce using rule 61 (logical_AND_expression)


State 266

   61 logical_AND_expression: logical_AND_expression • AND M inclusive_OR_expression
   63 logical_OR_expression: logical_OR_expression OR M logical_AND_expression •

    AND  shift, and go to state 148

    $default  reduce using rule 63 (logical_OR_expression)


State 267

   65 conditional_expression: logical_OR_expression N '?' M • expression N ':' M conditional_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 290


State 268

  161 labeled_statement: CASE constant_expression ':' • statement

    BREAK              shift, and go to state 151
    CASE               shift, and go to state 152
    CONTINUE           shift, and go to state 153
    DEFAULT            shift, and go to state 154
    DO                 shift, and go to state 155
    FOR                shift, and go to state 156
    GOTO               shift, and go to state 157
    IF                 shift, and go to state 158
    RETURN             shift, and go to state 159
    SIZEOF             shift, and go to state 54
    SWITCH             shift, and go to state 160
    WHILE              shift, and go to state 161
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 162
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '{'                shift, and go to state 88
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    statement                  go to state 291
    labeled_statement          go to state 166
    compound_statement         go to state 167
    expression_statement       go to state 171
    expression_opt             go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175


State 269

  162 labeled_statement: DEFAULT ':' statement •

    $default  reduce using rule 162 (labeled_statement)


State 270

  177 iteration_statement: DO M statement • WHILE '(' M expression N ')' ';'

    WHILE  shift, and go to state 292


State 271

  179 iteration_statement: FOR '(' declaration • expression_opt ';' expression_opt ')' statement

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    expression_opt             go to state 293


State 272

  178 iteration_statement: FOR '(' expression_opt • ';' M expression_opt N ';' M expression_opt N ')' M statement

    ';'  shift, and go to state 294


State 273

  180 jump_statement: GOTO IDENTIFIER ';' •

    $default  reduce using rule 180 (jump_statement)


State 274

   81 expression: expression • ',' assignment_expression
  173 selection_statement: IF '(' expression • N ')' M statement N ELSE M statement
  174                    | IF '(' expression • N ')' M statement

    ','  shift, and go to state 190

    $default  reduce using rule 2 (N)

    N  go to state 295


State 275

  183 jump_statement: RETURN expression_opt ';' •

    $default  reduce using rule 183 (jump_statement)


State 276

   81 expression: expression • ',' assignment_expression
  175 selection_statement: SWITCH '(' expression • ')' statement

    ')'  shift, and go to state 296
    ','  shift, and go to state 190


State 277

  176 iteration_statement: WHILE '(' M • expression N ')' M statement

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 297


State 278

  160 labeled_statement: IDENTIFIER ':' statement •

    $default  reduce using rule 160 (labeled_statement)


State 279

  167 block_item_list: block_item_list M block_item •

    $default  reduce using rule 167 (block_item_list)


State 280

  134 parameter_type_list: parameter_list ',' ELLIPSIS •

    $default  reduce using rule 134 (parameter_type_list)


State 281

  136 parameter_list: parameter_list ',' parameter_declaration •

    $default  reduce using rule 136 (parameter_list)


State 282

  140 identifier_list: identifier_list ',' IDENTIFIER •

    $default  reduce using rule 140 (identifier_list)


State 283

  118 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression • ']'

    ']'  shift, and go to state 298


State 284

  120 direct_declarator: direct_declarator '[' type_qualifier_list_opt '*' ']' •

    $default  reduce using rule 120 (direct_declarator)


State 285

  117 direct_declarator: direct_declarator '[' type_qualifier_list_opt assignment_expression_opt ']' •

    $default  reduce using rule 117 (direct_declarator)


State 286

  119 direct_declarator: direct_declarator '[' type_qualifier_list STATIC assignment_expression • ']'

    ']'  shift, and go to state 299


State 287

   16 postfix_expression: '(' type_name ')' '{' initializer_list • '}'
   17                   | '(' type_name ')' '{' initializer_list • ',' '}'
  146 initializer_list: initializer_list • ',' designation_opt initializer

    '}'  shift, and go to state 300
    ','  shift, and go to state 301


State 288

  146 initializer_list: initializer_list ',' designation_opt initializer •

    $default  reduce using rule 146 (initializer_list)


State 289

   19 argument_expression_list: argument_expression_list ',' assignment_expression •

    $default  reduce using rule 19 (argument_expression_list)


State 290

   65 conditional_expression: logical_OR_expression N '?' M expression • N ':' M conditional_expression
   81 expression: expression • ',' assignment_expression

    ','  shift, and go to state 190

    $default  reduce using rule 2 (N)

    N  go to state 302


State 291

  161 labeled_statement: CASE constant_expression ':' statement •

    $default  reduce using rule 161 (labeled_statement)


State 292

  177 iteration_statement: DO M statement WHILE • '(' M expression N ')' ';'

    '('  shift, and go to state 303


State 293

  179 iteration_statement: FOR '(' declaration expression_opt • ';' expression_opt ')' statement

    ';'  shift, and go to state 304


State 294

  178 iteration_statement: FOR '(' expression_opt ';' • M expression_opt N ';' M expression_opt N ')' M statement

    $default  reduce using rule 1 (M)

    M  go to state 305


State 295

  173 selection_statement: IF '(' expression N • ')' M statement N ELSE M statement
  174                    | IF '(' expression N • ')' M statement

    ')'  shift, and go to state 306


State 296

  175 selection_statement: SWITCH '(' expression ')' • statement

    BREAK              shift, and go to state 151
    CASE               shift, and go to state 152
    CONTINUE           shift, and go to state 153
    DEFAULT            shift, and go to state 154
    DO                 shift, and go to state 155
    FOR                shift, and go to state 156
    GOTO               shift, and go to state 157
    IF                 shift, and go to state 158
    RETURN             shift, and go to state 159
    SIZEOF             shift, and go to state 54
    SWITCH             shift, and go to state 160
    WHILE              shift, and go to state 161
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 162
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '{'                shift, and go to state 88
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    statement                  go to state 307
    labeled_statement          go to state 166
    compound_statement         go to state 167
    expression_statement       go to state 171
    expression_opt             go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175


State 297

   81 expression: expression • ',' assignment_expression
  176 iteration_statement: WHILE '(' M expression • N ')' M statement

    ','  shift, and go to state 190

    $default  reduce using rule 2 (N)

    N  go to state 308


State 298

  118 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression ']' •

    $default  reduce using rule 118 (direct_declarator)


State 299

  119 direct_declarator: direct_declarator '[' type_qualifier_list STATIC assignment_expression ']' •

    $default  reduce using rule 119 (direct_declarator)


State 300

   16 postfix_expression: '(' type_name ')' '{' initializer_list '}' •

    $default  reduce using rule 16 (postfix_expression)


State 301

   17 postfix_expression: '(' type_name ')' '{' initializer_list ',' • '}'
  146 initializer_list: initializer_list ',' • designation_opt initializer

    '['  shift, and go to state 105
    '.'  shift, and go to state 106
    '}'  shift, and go to state 309

    $default  reduce using rule 148 (designation_opt)

    designation_opt  go to state 261
    designation      go to state 109
    designator_list  go to state 110
    designator       go to state 111


State 302

   65 conditional_expression: logical_OR_expression N '?' M expression N • ':' M conditional_expression

    ':'  shift, and go to state 310


State 303

  177 iteration_statement: DO M statement WHILE '(' • M expression N ')' ';'

    $default  reduce using rule 1 (M)

    M  go to state 311


State 304

  179 iteration_statement: FOR '(' declaration expression_opt ';' • expression_opt ')' statement

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    expression_opt             go to state 312


State 305

  178 iteration_statement: FOR '(' expression_opt ';' M • expression_opt N ';' M expression_opt N ')' M statement

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    expression_opt             go to state 313


State 306

  173 selection_statement: IF '(' expression N ')' • M statement N ELSE M statement
  174                    | IF '(' expression N ')' • M statement

    $default  reduce using rule 1 (M)

    M  go to state 314


State 307

  175 selection_statement: SWITCH '(' expression ')' statement •

    $default  reduce using rule 175 (selection_statement)


State 308

  176 iteration_statement: WHILE '(' M expression N • ')' M statement

    ')'  shift, and go to state 315


State 309

   17 postfix_expression: '(' type_name ')' '{' initializer_list ',' '}' •

    $default  reduce using rule 17 (postfix_expression)


State 310

   65 conditional_expression: logical_OR_expression N '?' M expression N ':' • M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 316


State 311

  177 iteration_statement: DO M statement WHILE '(' M • expression N ')' ';'

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 317


State 312

  179 iteration_statement: FOR '(' declaration expression_opt ';' expression_opt • ')' statement

    ')'  shift, and go to state 318


State 313

  178 iteration_statement: FOR '(' expression_opt ';' M expression_opt • N ';' M expression_opt N ')' M statement

    $default  reduce using rule 2 (N)

    N  go to state 319


State 314

  173 selection_statement: IF '(' expression N ')' M • statement N ELSE M statement
  174                    | IF '(' expression N ')' M • statement

    BREAK              shift, and go to state 151
    CASE               shift, and go to state 152
    CONTINUE           shift, and go to state 153
    DEFAULT            shift, and go to state 154
    DO                 shift, and go to state 155
    FOR                shift, and go to state 156
    GOTO               shift, and go to state 157
    IF                 shift, and go to state 158
    RETURN             shift, and go to state 159
    SIZEOF             shift, and go to state 54
    SWITCH             shift, and go to state 160
    WHILE              shift, and go to state 161
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 162
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '{'                shift, and go to state 88
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    statement                  go to state 320
    labeled_statement          go to state 166
    compound_statement         go to state 167
    expression_statement       go to state 171
    expression_opt             go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175


State 315

  176 iteration_statement: WHILE '(' M expression N ')' • M statement

    $default  reduce using rule 1 (M)

    M  go to state 321


State 316

   65 conditional_expression: logical_OR_expression N '?' M expression N ':' M • conditional_expression

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 130
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 322


State 317

   81 expression: expression • ',' assignment_expression
  177 iteration_statement: DO M statement WHILE '(' M expression • N ')' ';'

    ','  shift, and go to state 190

    $default  reduce using rule 2 (N)

    N  go to state 323


State 318

  179 iteration_statement: FOR '(' declaration expression_opt ';' expression_opt ')' • statement

    BREAK              shift, and go to state 151
    CASE               shift, and go to state 152
    CONTINUE           shift, and go to state 153
    DEFAULT            shift, and go to state 154
    DO                 shift, and go to state 155
    FOR                shift, and go to state 156
    GOTO               shift, and go to state 157
    IF                 shift, and go to state 158
    RETURN             shift, and go to state 159
    SIZEOF             shift, and go to state 54
    SWITCH             shift, and go to state 160
    WHILE              shift, and go to state 161
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 162
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '{'                shift, and go to state 88
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    statement                  go to state 324
    labeled_statement          go to state 166
    compound_statement         go to state 167
    expression_statement       go to state 171
    expression_opt             go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175


State 319

  178 iteration_statement: FOR '(' expression_opt ';' M expression_opt N • ';' M expression_opt N ')' M statement

    ';'  shift, and go to state 325


State 320

  173 selection_statement: IF '(' expression N ')' M statement • N ELSE M statement
  174                    | IF '(' expression N ')' M statement •

    ELSE      reduce using rule 2 (N)
    ELSE      [reduce using rule 174 (selection_statement)]
    $default  reduce using rule 174 (selection_statement)

    N  go to state 326


State 321

  176 iteration_statement: WHILE '(' M expression N ')' M • statement

    BREAK              shift, and go to state 151
    CASE               shift, and go to state 152
    CONTINUE           shift, and go to state 153
    DEFAULT            shift, and go to state 154
    DO                 shift, and go to state 155
    FOR                shift, and go to state 156
    GOTO               shift, and go to state 157
    IF                 shift, and go to state 158
    RETURN             shift, and go to state 159
    SIZEOF             shift, and go to state 54
    SWITCH             shift, and go to state 160
    WHILE              shift, and go to state 161
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 162
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '{'                shift, and go to state 88
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    statement                  go to state 327
    labeled_statement          go to state 166
    compound_statement         go to state 167
    expression_statement       go to state 171
    expression_opt             go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175


State 322

   65 conditional_expression: logical_OR_expression N '?' M expression N ':' M conditional_expression •

    $default  reduce using rule 65 (conditional_expression)


State 323

  177 iteration_statement: DO M statement WHILE '(' M expression N • ')' ';'

    ')'  shift, and go to state 328


State 324

  179 iteration_statement: FOR '(' declaration expression_opt ';' expression_opt ')' statement •

    $default  reduce using rule 179 (iteration_statement)


State 325

  178 iteration_statement: FOR '(' expression_opt ';' M expression_opt N ';' • M expression_opt N ')' M statement

    $default  reduce using rule 1 (M)

    M  go to state 329


State 326

  173 selection_statement: IF '(' expression N ')' M statement N • ELSE M statement

    ELSE  shift, and go to state 330


State 327

  176 iteration_statement: WHILE '(' M expression N ')' M statement •

    $default  reduce using rule 176 (iteration_statement)


State 328

  177 iteration_statement: DO M statement WHILE '(' M expression N ')' • ';'

    ';'  shift, and go to state 331


State 329

  178 iteration_statement: FOR '(' expression_opt ';' M expression_opt N ';' M • expression_opt N ')' M statement

    SIZEOF             shift, and go to state 54
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 61
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    expression_opt             go to state 332


State 330

  173 selection_statement: IF '(' expression N ')' M statement N ELSE • M statement

    $default  reduce using rule 1 (M)

    M  go to state 333


State 331

  177 iteration_statement: DO M statement WHILE '(' M expression N ')' ';' •

    $default  reduce using rule 177 (iteration_statement)


State 332

  178 iteration_statement: FOR '(' expression_opt ';' M expression_opt N ';' M expression_opt • N ')' M statement

    $default  reduce using rule 2 (N)

    N  go to state 334


State 333

  173 selection_statement: IF '(' expression N ')' M statement N ELSE M • statement

    BREAK              shift, and go to state 151
    CASE               shift, and go to state 152
    CONTINUE           shift, and go to state 153
    DEFAULT            shift, and go to state 154
    DO                 shift, and go to state 155
    FOR                shift, and go to state 156
    GOTO               shift, and go to state 157
    IF                 shift, and go to state 158
    RETURN             shift, and go to state 159
    SIZEOF             shift, and go to state 54
    SWITCH             shift, and go to state 160
    WHILE              shift, and go to state 161
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 162
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '{'                shift, and go to state 88
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    statement                  go to state 335
    labeled_statement          go to state 166
    compound_statement         go to state 167
    expression_statement       go to state 171
    expression_opt             go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175


State 334

  178 iteration_statement: FOR '(' expression_opt ';' M expression_opt N ';' M expression_opt N • ')' M statement

    ')'  shift, and go to state 336


State 335

  173 selection_statement: IF '(' expression N ')' M statement N ELSE M statement •

    $default  reduce using rule 173 (selection_statement)


State 336

  178 iteration_statement: FOR '(' expression_opt ';' M expression_opt N ';' M expression_opt N ')' • M statement

    $default  reduce using rule 1 (M)

    M  go to state 337


State 337

  178 iteration_statement: FOR '(' expression_opt ';' M expression_opt N ';' M expression_opt N ')' M • statement

    BREAK              shift, and go to state 151
    CASE               shift, and go to state 152
    CONTINUE           shift, and go to state 153
    DEFAULT            shift, and go to state 154
    DO                 shift, and go to state 155
    FOR                shift, and go to state 156
    GOTO               shift, and go to state 157
    IF                 shift, and go to state 158
    RETURN             shift, and go to state 159
    SIZEOF             shift, and go to state 54
    SWITCH             shift, and go to state 160
    WHILE              shift, and go to state 161
    DECREMENT          shift, and go to state 55
    INCREMENT          shift, and go to state 56
    INTEGER_CONSTANT   shift, and go to state 57
    FLOATING_CONSTANT  shift, and go to state 58
    CHAR_CONST         shift, and go to state 59
    STRING_LITERAL     shift, and go to state 60
    IDENTIFIER         shift, and go to state 162
    '+'                shift, and go to state 62
    '-'                shift, and go to state 63
    '*'                shift, and go to state 64
    '('                shift, and go to state 65
    '{'                shift, and go to state 88
    '&'                shift, and go to state 67
    '~'                shift, and go to state 68
    '!'                shift, and go to state 69

    $default  reduce using rule 172 (expression_opt)

    primary_expression         go to state 70
    postfix_expression         go to state 71
    unary_expression           go to state 72
    unary_operator             go to state 73
    cast_expression            go to state 74
    multiplicative_expression  go to state 75
    additive_expression        go to state 76
    shift_expression           go to state 77
    relational_expression      go to state 78
    equality_expression        go to state 79
    AND_expression             go to state 80
    exclusive_OR_expression    go to state 81
    inclusive_OR_expression    go to state 82
    logical_AND_expression     go to state 83
    logical_OR_expression      go to state 84
    conditional_expression     go to state 85
    assignment_expression      go to state 99
    expression                 go to state 163
    statement                  go to state 338
    labeled_statement          go to state 166
    compound_statement         go to state 167
    expression_statement       go to state 171
    expression_opt             go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175


State 338

  178 iteration_statement: FOR '(' expression_opt ';' M expression_opt N ';' M expression_opt N ')' M statement •

    $default  reduce using rule 178 (iteration_statement)
